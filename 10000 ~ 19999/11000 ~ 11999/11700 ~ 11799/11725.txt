import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {
	static class Num {
		ArrayList<Integer> list = new ArrayList<>();
	}

	static int N;
	static Num[] num;
	static int[] p;

	// y의 부모를 x로 설정, x와 연관된 애들의 부모를 x로 설정
	static void union(int x, int y) {
		p[y] = x;

		for (int i = 0; i < num[y].list.size(); i++) {
			int next = num[y].list.get(i);
			if (p[next] == next) {
				union(y, next);
			}
		}
	}

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;

		N = Integer.parseInt(br.readLine());
		num = new Num[N + 1];
		p = new int[N + 1];

		for (int i = 2; i <= N; i++) {
			p[i] = i;
			num[i] = new Num();
		}

		for (int i = 0; i < N - 1; i++) {
			st = new StringTokenizer(br.readLine());
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());

			if (x == 1 || p[x] != x) {
				union(x, y);
			} else if (y == 1 || p[y] != y) {
				union(y, x);
			} else {
				num[x].list.add(y);
				num[y].list.add(x);
			}
		}

		StringBuilder sb = new StringBuilder();
		for (int i = 2; i <= N; i++) {
			sb.append(p[i]).append("\n");
		}
		System.out.println(sb.toString());
	}
}
